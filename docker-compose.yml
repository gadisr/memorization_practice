services:
  postgres:
    image: postgres:15-alpine
    container_name: bld_trainer_db
    environment:
      POSTGRES_USER: bld_user
      POSTGRES_PASSWORD: bld_password
      POSTGRES_DB: bld_trainer
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bld_user -d bld_trainer"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    container_name: bld_trainer_api
    environment:
      DATABASE_URL: postgresql://bld_user:bld_password@postgres:5432/bld_trainer
      FIREBASE_PROJECT_ID: cube-trainer-ce95a
      FIREBASE_CREDENTIALS_PATH: /app/firebase-credentials.json
      ALLOWED_ORIGINS: '["https://blindfoldcubing.com", "https://www.blindfoldcubing.com", "https://localhost", "https://64.23.137.68", "http://localhost:3000", "http://localhost:8000", "http://frontend:3000", "http://64.23.137.68:3000"]'
    expose:
      - "8000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app
    command: uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload

  frontend:
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
    container_name: bld_trainer_frontend
    environment:
      API_BASE_URL: https://blindfoldcubing.com/api/v1
    expose:
      - "3000"
    depends_on:
      - backend

  nginx:
    build: ./nginx
    container_name: bld_trainer_nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
      - frontend
    volumes:
      # Mount SSL certificates directory for production certificates
      - ./ssl:/etc/nginx/ssl:ro

volumes:
  postgres_data:

